import { useRouter } from "next/router";
import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Pokemon.module.css";
import Link from 'next/link'

export default function DexEntry({ pokemon }) {
  const {
    query: { id },
  } = useRouter();

  const Name = pokemon.name[0].toUpperCase() + pokemon.name.substring(1);
  const Picture = pokemon.image;

  const StatTable = pokemon.stats.map((stat) => {
    const Stat = stat.stat.name[0].toUpperCase() + stat.stat.name.substring(1);
    let StatName = Stat;
    if (Stat === "Hp") {
      StatName = "HP";
    } else if (Stat === "Special-attack") {
      StatName = "Special Attack";
    } else if (Stat === "Special-defense") {
      StatName = "Special Defense";
    }

    return (
      <tr key={stat.stat.name}>
        <td>{StatName}</td>
        <td>{stat.base_stat}</td>
      </tr>
    );
  });

  const Types = pokemon.types.map((type, index) => {
    const Type = type.type.name[0].toUpperCase() + type.type.name.substring(1);
    return <div key={index}>{Type}</div>;
  });

  return (
    <>
        <Head>
        <title>{Name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Link href="/"><a>Return to Dex</a></Link>
      <div className={styles.layout}>
        <div className={styles.card}>
          <div className={styles.row}>
            <div className={styles.column}>
              <h1 className={styles.name}>{Name}</h1>
              {Types}
            </div>
            <div className={styles.image}>
              <img src={Picture} />
            {/* <Image src={Picture} 
              height={'150'}
              width={'150'}/> */}
            </div>
          </div>
          <table>
            <thead>
              <tr>
                <th>Stat</th>
                <th>Total</th>
              </tr>
            </thead>
            <tbody>{StatTable}</tbody>
          </table>
        </div>
      </div>
    </>
  );
}

export async function getStaticPaths() {
    const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=898')
    const list = await res.json()
    return {
        paths: list.results.map((pokemon) => ({
          params: { id: pokemon.name.toString() },
        })),
        fallback: false,
      };
    }

export async function getStaticProps({ params }) {
  try {
    const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${params.id}`);
    const pokemon = await res.json();
    const dexId = ("00" + pokemon.id).slice(-3);
    //Here we are checking to see if the pokmeon has multiple forms
    // const formdetails = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemon.id}`)
    // const variations = await formdetails.json()
    // pokemon.variations = variations
    // console.log('number of variations', variations.varieties.length)
    // let megaOrRegionalForm = []
    // if (variations.varieties.length > 1) {
        
        
    // }
    // pokemon.image = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/10033.png';
    pokemon.image = `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${dexId}.png`;

    return {
      props: {
        pokemon,
      },
    };
  } catch (err) {
    console.error(err);
  }
}
